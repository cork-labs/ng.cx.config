!function(a){"use strict";function b(a){return"[object RegExp]"===window.toString.call(a)}function c(d,e){if(d!==e)if(a.isDate(e))d=new Date(e.getTime());else if(b(e))d=new RegExp(e.source,e.toString().match(/[^\/]*$/)[0]),d.lastIndex=e.lastIndex;else if(a.isObject(e)){a.isArray(e)?a.isArray(d)||(d=[]):(!a.isObject(d)||a.isArray(d))&&(d={});for(var f in e)d[f]=c(d[f],e[f])}else d=e;return d}var d=a.module("ng.cx.config",[]);d.provider("cxConfig",[function(){var b={},d=function(c,d){var e,f,g=b;if(!a.isString(c))throw new Error('Invalid argument "path". Should be "string", was "'+typeof c+'".');for(e=c.split(".");e.length>1&&g;)f=e.shift(),g.hasOwnProperty(f)&&"object"==typeof g[f]||(g[f]={}),g=g[f];f=e.shift(),g[f]="object"==typeof d?a.copy(d):d},e=function(c,d){var e,f,g=b;if(!a.isUndefined(c)&&!a.isString(c))throw new Error('Invalid argument "path". Should be "undefined" or "string", was "'+typeof c+'".');for(e=c?c.split("."):[];e.length&&g;){if(f=e.shift(),!g.hasOwnProperty(f)){if(!e.length&&arguments.length>1)return d;throw new Error('Config path "'+c+'" is not defined.')}g=g[f]}return"object"==typeof g?a.copy(g):g},f=function(a){c(b,a)};this.set=d,this.get=e,this.merge=f,this.$get=["$q","$http",function(){var a={set:d,get:e};return a}]}])}(angular);